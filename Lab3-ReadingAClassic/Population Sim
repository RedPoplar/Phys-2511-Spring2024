#!/usr/bin/env python
# coding: utf-8

# In[21]:


import random
import matplotlib as mpl
import matplotlib.pyplot as plt

# list of species and list of species birthrate/agression
# birthrate and agression are inversely proportional
# resources increase linearly 
ExtTF = False
ExtCounter = 0
Population = [50,50,50]
Birthrate = []
Agression = []
PeerAg = []
for i in range(0,3):
    Birthrate_var = 1 + (random.randint(1,100)/100)
    Agression_var = 2 - Birthrate_var
    Birthrate.append(Birthrate_var)
    Agression.append(Agression_var)
for i in range (0,3):
    PeerAg_var = (sum(Agression)-Agression[i])/2
    PeerAg.append(PeerAg_var)

Turncounter = 0
PopulationTracker = [[],[],[]]
Turn = [[],[],[]]
Resources = []
for i in range(0,3):
	Resources.append(1000)


while sum(Population)>0 and ExtCounter<100:
    #Resources += 10000
    for i in range(0, len(Resources)):
    	Resources[i] += 100
    	Turncounter += 1/3
    	Turn[i].append(Turncounter)
    	PopulationTracker[i].append(Population[i])
    	if Resources[i]>Population[i]:
    		Resources[i] -= Population[i]
    		Population[i] = Population[i] * Birthrate[i]
    	else:
    		Population[i] -= (Population[i]-Resources[i])
    		Population[i] += (Birthrate[i] * Agression[i])*(sum(Population)-Population[i])
    		Population[i] -= PeerAg[i]*(sum(Population)-Population[i])
    		Resources[i] = 0
    for i in range(0, (len(Population))):
        if Population[i-1]<0:
            Population.remove(Population[i-1])
            Resources.remove(Resources[i-1])
            ExtTF = True
    if ExtTF == True:
        ExtCounter += 1
    
      
    print("resources:", Resources, "pop:", Population)
    ExtCounter += 1
           
        
        
    
print(PopulationTracker[0], Turn[0])
plt.plot(Turn[0], PopulationTracker[0], label = "Pop1")
plt.plot(Turn[1], PopulationTracker[1], label = "Pop2")
plt.plot(Turn[2], PopulationTracker[2], label = "Pop3")
plt.legend()
plt.show()



# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:



